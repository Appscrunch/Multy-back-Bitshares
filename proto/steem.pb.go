// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bitshares.proto

/*
Package proto is a generated protocol buffer package.

based on https://github.com/Appscrunch/Multy-back/

It is generated from these files:
	bitshares.proto

It has these top-level messages:
	OkErrResponse
	AccountCheckRequest
	AccountCheckResponse
	Accounts
	Balance
	GetBalancesResponse
	AccountCreateRequest
	BalancesChangedMessage
	GetTrackedAddressesResponse
	SendTransactionResponse
	Block
	HeadInfo
	Empty
	TransactionJSON
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type OkErrResponse struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *OkErrResponse) Reset()                    { *m = OkErrResponse{} }
func (m *OkErrResponse) String() string            { return proto1.CompactTextString(m) }
func (*OkErrResponse) ProtoMessage()               {}
func (*OkErrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OkErrResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *OkErrResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AccountCheckRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *AccountCheckRequest) Reset()                    { *m = AccountCheckRequest{} }
func (m *AccountCheckRequest) String() string            { return proto1.CompactTextString(m) }
func (*AccountCheckRequest) ProtoMessage()               {}
func (*AccountCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccountCheckRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AccountCheckResponse struct {
	Exist bool   `protobuf:"varint,1,opt,name=exist" json:"exist,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *AccountCheckResponse) Reset()                    { *m = AccountCheckResponse{} }
func (m *AccountCheckResponse) String() string            { return proto1.CompactTextString(m) }
func (*AccountCheckResponse) ProtoMessage()               {}
func (*AccountCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccountCheckResponse) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

func (m *AccountCheckResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Accounts struct {
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
}

func (m *Accounts) Reset()                    { *m = Accounts{} }
func (m *Accounts) String() string            { return proto1.CompactTextString(m) }
func (*Accounts) ProtoMessage()               {}
func (*Accounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Accounts) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type Balance struct {
	Name              string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Balance           string `protobuf:"bytes,2,opt,name=balance" json:"balance,omitempty"`
	SavingsBalance    string `protobuf:"bytes,3,opt,name=savings_balance,json=savingsBalance" json:"savings_balance,omitempty"`
	SbdBalance        string `protobuf:"bytes,4,opt,name=sbd_balance,json=sbdBalance" json:"sbd_balance,omitempty"`
	SavingsSbdBalance string `protobuf:"bytes,5,opt,name=savings_sbd_balance,json=savingsSbdBalance" json:"savings_sbd_balance,omitempty"`
	VestingBalance    string `protobuf:"bytes,6,opt,name=vesting_balance,json=vestingBalance" json:"vesting_balance,omitempty"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto1.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Balance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Balance) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *Balance) GetSavingsBalance() string {
	if m != nil {
		return m.SavingsBalance
	}
	return ""
}

func (m *Balance) GetSbdBalance() string {
	if m != nil {
		return m.SbdBalance
	}
	return ""
}

func (m *Balance) GetSavingsSbdBalance() string {
	if m != nil {
		return m.SavingsSbdBalance
	}
	return ""
}

func (m *Balance) GetVestingBalance() string {
	if m != nil {
		return m.VestingBalance
	}
	return ""
}

type GetBalancesResponse struct {
	Balances []*Balance `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
	Error    string     `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *GetBalancesResponse) Reset()                    { *m = GetBalancesResponse{} }
func (m *GetBalancesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetBalancesResponse) ProtoMessage()               {}
func (*GetBalancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetBalancesResponse) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

func (m *GetBalancesResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AccountCreateRequest struct {
	Account string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Owner   string `protobuf:"bytes,2,opt,name=owner" json:"owner,omitempty"`
	Active  string `protobuf:"bytes,3,opt,name=active" json:"active,omitempty"`
	Posting string `protobuf:"bytes,4,opt,name=posting" json:"posting,omitempty"`
	Memo    string `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	Fee     string `protobuf:"bytes,6,opt,name=fee" json:"fee,omitempty"`
}

func (m *AccountCreateRequest) Reset()                    { *m = AccountCreateRequest{} }
func (m *AccountCreateRequest) String() string            { return proto1.CompactTextString(m) }
func (*AccountCreateRequest) ProtoMessage()               {}
func (*AccountCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccountCreateRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AccountCreateRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *AccountCreateRequest) GetActive() string {
	if m != nil {
		return m.Active
	}
	return ""
}

func (m *AccountCreateRequest) GetPosting() string {
	if m != nil {
		return m.Posting
	}
	return ""
}

func (m *AccountCreateRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *AccountCreateRequest) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

type BalancesChangedMessage struct {
	Balances []*Balance `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
}

func (m *BalancesChangedMessage) Reset()                    { *m = BalancesChangedMessage{} }
func (m *BalancesChangedMessage) String() string            { return proto1.CompactTextString(m) }
func (*BalancesChangedMessage) ProtoMessage()               {}
func (*BalancesChangedMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BalancesChangedMessage) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type GetTrackedAddressesResponse struct {
	Accounts []string `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	Error    string   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *GetTrackedAddressesResponse) Reset()                    { *m = GetTrackedAddressesResponse{} }
func (m *GetTrackedAddressesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetTrackedAddressesResponse) ProtoMessage()               {}
func (*GetTrackedAddressesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetTrackedAddressesResponse) GetAccounts() []string {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *GetTrackedAddressesResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SendTransactionResponse struct {
	Ok       bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error    string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Response string `protobuf:"bytes,3,opt,name=response" json:"response,omitempty"`
}

func (m *SendTransactionResponse) Reset()                    { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string            { return proto1.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()               {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SendTransactionResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SendTransactionResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SendTransactionResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Block struct {
	Height       uint32               `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Time         int64                `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Transactions []*Block_Transaction `protobuf:"bytes,3,rep,name=transactions" json:"transactions,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto1.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Block) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Block) GetTransactions() []*Block_Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type Block_Transaction struct {
	RefBlockNum    uint32   `protobuf:"varint,1,opt,name=ref_block_num,json=refBlockNum" json:"ref_block_num,omitempty"`
	RefBlockPrefix uint32   `protobuf:"varint,2,opt,name=ref_block_prefix,json=refBlockPrefix" json:"ref_block_prefix,omitempty"`
	Expiration     int64    `protobuf:"varint,3,opt,name=expiration" json:"expiration,omitempty"`
	Operations     string   `protobuf:"bytes,4,opt,name=operations" json:"operations,omitempty"`
	Signatures     []string `protobuf:"bytes,6,rep,name=signatures" json:"signatures,omitempty"`
}

func (m *Block_Transaction) Reset()                    { *m = Block_Transaction{} }
func (m *Block_Transaction) String() string            { return proto1.CompactTextString(m) }
func (*Block_Transaction) ProtoMessage()               {}
func (*Block_Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

func (m *Block_Transaction) GetRefBlockNum() uint32 {
	if m != nil {
		return m.RefBlockNum
	}
	return 0
}

func (m *Block_Transaction) GetRefBlockPrefix() uint32 {
	if m != nil {
		return m.RefBlockPrefix
	}
	return 0
}

func (m *Block_Transaction) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *Block_Transaction) GetOperations() string {
	if m != nil {
		return m.Operations
	}
	return ""
}

func (m *Block_Transaction) GetSignatures() []string {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type HeadInfo struct {
	Height uint32 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *HeadInfo) Reset()                    { *m = HeadInfo{} }
func (m *HeadInfo) String() string            { return proto1.CompactTextString(m) }
func (*HeadInfo) ProtoMessage()               {}
func (*HeadInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *HeadInfo) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *HeadInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type TransactionJSON struct {
	Json string `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"`
}

func (m *TransactionJSON) Reset()                    { *m = TransactionJSON{} }
func (m *TransactionJSON) String() string            { return proto1.CompactTextString(m) }
func (*TransactionJSON) ProtoMessage()               {}
func (*TransactionJSON) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TransactionJSON) GetJson() string {
	if m != nil {
		return m.Json
	}
	return ""
}

func init() {
	proto1.RegisterType((*OkErrResponse)(nil), "proto.OkErrResponse")
	proto1.RegisterType((*AccountCheckRequest)(nil), "proto.AccountCheckRequest")
	proto1.RegisterType((*AccountCheckResponse)(nil), "proto.AccountCheckResponse")
	proto1.RegisterType((*Accounts)(nil), "proto.Accounts")
	proto1.RegisterType((*Balance)(nil), "proto.Balance")
	proto1.RegisterType((*GetBalancesResponse)(nil), "proto.GetBalancesResponse")
	proto1.RegisterType((*AccountCreateRequest)(nil), "proto.AccountCreateRequest")
	proto1.RegisterType((*BalancesChangedMessage)(nil), "proto.BalancesChangedMessage")
	proto1.RegisterType((*GetTrackedAddressesResponse)(nil), "proto.GetTrackedAddressesResponse")
	proto1.RegisterType((*SendTransactionResponse)(nil), "proto.SendTransactionResponse")
	proto1.RegisterType((*Block)(nil), "proto.Block")
	proto1.RegisterType((*Block_Transaction)(nil), "proto.Block.Transaction")
	proto1.RegisterType((*HeadInfo)(nil), "proto.HeadInfo")
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
	proto1.RegisterType((*TransactionJSON)(nil), "proto.TransactionJSON")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeCommunications service

type NodeCommunicationsClient interface {
	EventGetHeadInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HeadInfo, error)
	EventAccountCheck(ctx context.Context, in *AccountCheckRequest, opts ...grpc.CallOption) (*AccountCheckResponse, error)
	EventAccountCreate(ctx context.Context, in *AccountCreateRequest, opts ...grpc.CallOption) (*OkErrResponse, error)
	EventGetBalances(ctx context.Context, in *Accounts, opts ...grpc.CallOption) (*GetBalancesResponse, error)
	EventTrackAddresses(ctx context.Context, in *Accounts, opts ...grpc.CallOption) (*OkErrResponse, error)
	EventGetTrackedAddresses(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Accounts, error)
	EventSendTransactionJSON(ctx context.Context, in *TransactionJSON, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	BalanceChanged(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_BalanceChangedClient, error)
	NewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_NewBlockClient, error)
}

type nodeCommunicationsClient struct {
	cc *grpc.ClientConn
}

func NewNodeCommunicationsClient(cc *grpc.ClientConn) NodeCommunicationsClient {
	return &nodeCommunicationsClient{cc}
}

func (c *nodeCommunicationsClient) EventGetHeadInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HeadInfo, error) {
	out := new(HeadInfo)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventGetHeadInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventAccountCheck(ctx context.Context, in *AccountCheckRequest, opts ...grpc.CallOption) (*AccountCheckResponse, error) {
	out := new(AccountCheckResponse)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventAccountCheck", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventAccountCreate(ctx context.Context, in *AccountCreateRequest, opts ...grpc.CallOption) (*OkErrResponse, error) {
	out := new(OkErrResponse)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventAccountCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetBalances(ctx context.Context, in *Accounts, opts ...grpc.CallOption) (*GetBalancesResponse, error) {
	out := new(GetBalancesResponse)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventGetBalances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventTrackAddresses(ctx context.Context, in *Accounts, opts ...grpc.CallOption) (*OkErrResponse, error) {
	out := new(OkErrResponse)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventTrackAddresses", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventGetTrackedAddresses(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Accounts, error) {
	out := new(Accounts)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventGetTrackedAddresses", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) EventSendTransactionJSON(ctx context.Context, in *TransactionJSON, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := grpc.Invoke(ctx, "/proto.NodeCommunications/EventSendTransactionJSON", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeCommunicationsClient) BalanceChanged(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_BalanceChangedClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommunications_serviceDesc.Streams[0], c.cc, "/proto.NodeCommunications/BalanceChanged", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsBalanceChangedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_BalanceChangedClient interface {
	Recv() (*Balance, error)
	grpc.ClientStream
}

type nodeCommunicationsBalanceChangedClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsBalanceChangedClient) Recv() (*Balance, error) {
	m := new(Balance)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeCommunicationsClient) NewBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (NodeCommunications_NewBlockClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeCommunications_serviceDesc.Streams[1], c.cc, "/proto.NodeCommunications/NewBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeCommunicationsNewBlockClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeCommunications_NewBlockClient interface {
	Recv() (*Block, error)
	grpc.ClientStream
}

type nodeCommunicationsNewBlockClient struct {
	grpc.ClientStream
}

func (x *nodeCommunicationsNewBlockClient) Recv() (*Block, error) {
	m := new(Block)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for NodeCommunications service

type NodeCommunicationsServer interface {
	EventGetHeadInfo(context.Context, *Empty) (*HeadInfo, error)
	EventAccountCheck(context.Context, *AccountCheckRequest) (*AccountCheckResponse, error)
	EventAccountCreate(context.Context, *AccountCreateRequest) (*OkErrResponse, error)
	EventGetBalances(context.Context, *Accounts) (*GetBalancesResponse, error)
	EventTrackAddresses(context.Context, *Accounts) (*OkErrResponse, error)
	EventGetTrackedAddresses(context.Context, *Empty) (*Accounts, error)
	EventSendTransactionJSON(context.Context, *TransactionJSON) (*SendTransactionResponse, error)
	BalanceChanged(*Empty, NodeCommunications_BalanceChangedServer) error
	NewBlock(*Empty, NodeCommunications_NewBlockServer) error
}

func RegisterNodeCommunicationsServer(s *grpc.Server, srv NodeCommunicationsServer) {
	s.RegisterService(&_NodeCommunications_serviceDesc, srv)
}

func _NodeCommunications_EventGetHeadInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetHeadInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventGetHeadInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetHeadInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventAccountCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventAccountCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventAccountCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventAccountCheck(ctx, req.(*AccountCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventAccountCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventAccountCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventAccountCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventAccountCreate(ctx, req.(*AccountCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Accounts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventGetBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetBalances(ctx, req.(*Accounts))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventTrackAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Accounts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventTrackAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventTrackAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventTrackAddresses(ctx, req.(*Accounts))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventGetTrackedAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventGetTrackedAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventGetTrackedAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventGetTrackedAddresses(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_EventSendTransactionJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionJSON)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeCommunicationsServer).EventSendTransactionJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.NodeCommunications/EventSendTransactionJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeCommunicationsServer).EventSendTransactionJSON(ctx, req.(*TransactionJSON))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeCommunications_BalanceChanged_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).BalanceChanged(m, &nodeCommunicationsBalanceChangedServer{stream})
}

type NodeCommunications_BalanceChangedServer interface {
	Send(*Balance) error
	grpc.ServerStream
}

type nodeCommunicationsBalanceChangedServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsBalanceChangedServer) Send(m *Balance) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeCommunications_NewBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeCommunicationsServer).NewBlock(m, &nodeCommunicationsNewBlockServer{stream})
}

type NodeCommunications_NewBlockServer interface {
	Send(*Block) error
	grpc.ServerStream
}

type nodeCommunicationsNewBlockServer struct {
	grpc.ServerStream
}

func (x *nodeCommunicationsNewBlockServer) Send(m *Block) error {
	return x.ServerStream.SendMsg(m)
}

var _NodeCommunications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.NodeCommunications",
	HandlerType: (*NodeCommunicationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EventGetHeadInfo",
			Handler:    _NodeCommunications_EventGetHeadInfo_Handler,
		},
		{
			MethodName: "EventAccountCheck",
			Handler:    _NodeCommunications_EventAccountCheck_Handler,
		},
		{
			MethodName: "EventAccountCreate",
			Handler:    _NodeCommunications_EventAccountCreate_Handler,
		},
		{
			MethodName: "EventGetBalances",
			Handler:    _NodeCommunications_EventGetBalances_Handler,
		},
		{
			MethodName: "EventTrackAddresses",
			Handler:    _NodeCommunications_EventTrackAddresses_Handler,
		},
		{
			MethodName: "EventGetTrackedAddresses",
			Handler:    _NodeCommunications_EventGetTrackedAddresses_Handler,
		},
		{
			MethodName: "EventSendTransactionJSON",
			Handler:    _NodeCommunications_EventSendTransactionJSON_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BalanceChanged",
			Handler:       _NodeCommunications_BalanceChanged_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NewBlock",
			Handler:       _NodeCommunications_NewBlock_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bitshares.proto",
}

func init() { proto1.RegisterFile("bitshares.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 783 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xd1, 0x6e, 0xe2, 0x46,
	0x14, 0x95, 0x21, 0x04, 0xf6, 0x12, 0x20, 0x3b, 0x44, 0xa9, 0xe5, 0x95, 0xb6, 0xc8, 0x52, 0xb5,
	0xb4, 0x0f, 0x28, 0x4d, 0xd5, 0x87, 0x4a, 0x2b, 0x55, 0x9b, 0x34, 0xa2, 0xad, 0x5a, 0x52, 0x39,
	0x2b, 0xf5, 0xa1, 0x0f, 0x91, 0xb1, 0x2f, 0xe0, 0xb2, 0x9e, 0xa1, 0x33, 0x03, 0x9b, 0xfe, 0x4c,
	0x7f, 0xa1, 0x1f, 0xd0, 0x1f, 0xe8, 0x37, 0xf4, 0x6b, 0xaa, 0x19, 0xdf, 0x31, 0x86, 0x85, 0x87,
	0x7d, 0x62, 0xce, 0xbd, 0x67, 0xce, 0xdc, 0x7b, 0xc6, 0x77, 0x80, 0xb6, 0xd2, 0x88, 0xf9, 0x68,
	0x25, 0x85, 0x16, 0xac, 0x61, 0x7f, 0xc2, 0xaf, 0xa1, 0x73, 0xbf, 0xbc, 0x93, 0x32, 0x42, 0xb5,
	0x12, 0x5c, 0x21, 0xeb, 0x42, 0x4d, 0x2c, 0x7d, 0x6f, 0xe0, 0x0d, 0x5b, 0x51, 0x4d, 0x2c, 0xd9,
	0x05, 0x34, 0x50, 0x4a, 0x21, 0xfd, 0xda, 0xc0, 0x1b, 0x3e, 0x8b, 0x0a, 0x10, 0x7e, 0x0e, 0xfd,
	0x37, 0x49, 0x22, 0xd6, 0x5c, 0xdf, 0x2e, 0x30, 0x59, 0x46, 0xf8, 0xc7, 0x1a, 0x95, 0x66, 0x0c,
	0x4e, 0x78, 0x9c, 0xa3, 0xdd, 0xfe, 0x2c, 0xb2, 0xeb, 0xf0, 0x06, 0x2e, 0x76, 0xa9, 0x74, 0x90,
	0x11, 0x7e, 0xca, 0x94, 0xa6, 0xb3, 0x0a, 0x70, 0xe4, 0xb8, 0x01, 0xb4, 0x48, 0x43, 0x19, 0x86,
	0xd1, 0x55, 0xbe, 0x37, 0xa8, 0x1b, 0x86, 0x05, 0xe1, 0x7f, 0x1e, 0x34, 0x6f, 0xe2, 0x77, 0x31,
	0x4f, 0xf0, 0x50, 0x15, 0xcc, 0x87, 0xe6, 0xb4, 0x48, 0x93, 0xb2, 0x83, 0xec, 0x15, 0xf4, 0x54,
	0xbc, 0xc9, 0xf8, 0x5c, 0x3d, 0x3a, 0x46, 0xdd, 0x32, 0xba, 0x14, 0x76, 0xb2, 0x9f, 0x42, 0x5b,
	0x4d, 0xd3, 0x92, 0x74, 0x62, 0x49, 0xa0, 0xa6, 0xa9, 0x23, 0x8c, 0xa0, 0xef, 0x94, 0xaa, 0xc4,
	0x86, 0x25, 0x3e, 0xa7, 0xd4, 0xc3, 0x96, 0xff, 0x0a, 0x7a, 0x1b, 0x54, 0x3a, 0xe3, 0xf3, 0x92,
	0x7b, 0x5a, 0x9c, 0x4c, 0x61, 0x22, 0x86, 0xbf, 0x42, 0x7f, 0x8c, 0x9a, 0x90, 0x2a, 0x1d, 0xfc,
	0x02, 0x5a, 0xb4, 0xaf, 0x30, 0xa3, 0x7d, 0xdd, 0x2d, 0x2e, 0x77, 0x44, 0xd4, 0xa8, 0xcc, 0x1f,
	0xf1, 0xf5, 0x2f, 0x6f, 0x7b, 0x39, 0x12, 0x63, 0x8d, 0xee, 0x22, 0x7d, 0x68, 0xc6, 0x45, 0x9c,
	0x5c, 0x74, 0xd0, 0x08, 0x89, 0xf7, 0x1c, 0x4b, 0x21, 0x0b, 0xd8, 0x25, 0x9c, 0xc6, 0x89, 0xce,
	0x36, 0xce, 0x3b, 0x42, 0x46, 0x67, 0x25, 0x6c, 0x2f, 0xe4, 0x97, 0x83, 0xe6, 0x92, 0x72, 0xcc,
	0x05, 0xb9, 0x63, 0xd7, 0xec, 0x1c, 0xea, 0x33, 0x74, 0x26, 0x98, 0x65, 0xf8, 0x1d, 0x5c, 0xba,
	0xb6, 0x6f, 0x17, 0x31, 0x9f, 0x63, 0xfa, 0x33, 0x2a, 0x15, 0xcf, 0x3f, 0xaa, 0xf9, 0xf0, 0x1e,
	0x5e, 0x8c, 0x51, 0xbf, 0x95, 0x71, 0xb2, 0xc4, 0xf4, 0x4d, 0x9a, 0x4a, 0x54, 0xaa, 0xe2, 0x63,
	0x00, 0x2d, 0xea, 0xce, 0x7d, 0x54, 0x25, 0x3e, 0xe2, 0xdb, 0x6f, 0xf0, 0xc9, 0x03, 0xf2, 0xf4,
	0xad, 0x8c, 0xb9, 0x32, 0x9d, 0x0a, 0xfe, 0x71, 0xf3, 0x63, 0x8e, 0x94, 0xb4, 0x83, 0x1c, 0x2b,
	0x71, 0xf8, 0x77, 0x0d, 0x1a, 0x37, 0xef, 0x44, 0xb2, 0x34, 0xae, 0x2e, 0x30, 0x9b, 0x2f, 0x8a,
	0x4b, 0xe8, 0x44, 0x84, 0x8c, 0x77, 0x3a, 0xcb, 0x8b, 0x2f, 0xb9, 0x1e, 0xd9, 0x35, 0x7b, 0x0d,
	0x67, 0x7a, 0x5b, 0x8e, 0xf2, 0xeb, 0xd6, 0x13, 0xdf, 0x79, 0x62, 0xf4, 0x46, 0xd5, 0x7a, 0x77,
	0xd8, 0xc1, 0x3f, 0x1e, 0xb4, 0x2b, 0x59, 0x16, 0x42, 0x47, 0xe2, 0xec, 0x71, 0x6a, 0xb6, 0x3d,
	0xf2, 0x75, 0x4e, 0x05, 0xb4, 0x25, 0xce, 0xac, 0xd4, 0x64, 0x9d, 0xb3, 0x21, 0x9c, 0x6f, 0x39,
	0x2b, 0x89, 0xb3, 0xec, 0xc9, 0x56, 0xd4, 0x89, 0xba, 0x8e, 0xf6, 0x8b, 0x8d, 0xb2, 0x97, 0x00,
	0xf8, 0xb4, 0xca, 0x64, 0x6c, 0xb4, 0x6d, 0xbf, 0xf5, 0xa8, 0x12, 0x31, 0x79, 0xb1, 0xc2, 0x02,
	0x28, 0x37, 0x58, 0xdb, 0x88, 0xc9, 0xab, 0x6c, 0xce, 0x63, 0xbd, 0x96, 0xa8, 0xfc, 0x53, 0x7b,
	0x45, 0x95, 0x48, 0x78, 0x0d, 0xad, 0xef, 0x31, 0x4e, 0x7f, 0xe0, 0x33, 0x71, 0xd4, 0xb3, 0x2e,
	0xd4, 0xb2, 0x94, 0x2e, 0xa1, 0x96, 0xa5, 0x61, 0x13, 0x1a, 0x77, 0xf9, 0x4a, 0xff, 0x19, 0x7e,
	0x06, 0xbd, 0x4a, 0xe7, 0x3f, 0x3e, 0xdc, 0x4f, 0x8c, 0xbf, 0xbf, 0x2b, 0xc1, 0xdd, 0x03, 0x62,
	0xd6, 0xd7, 0xff, 0x9e, 0x00, 0x9b, 0x88, 0x14, 0x6f, 0x45, 0x9e, 0xaf, 0x79, 0x96, 0x50, 0x69,
	0x5f, 0xc2, 0xf9, 0xdd, 0x06, 0xb9, 0x1e, 0xa3, 0x2e, 0x4b, 0x38, 0x23, 0xd3, 0xad, 0x7e, 0xd0,
	0x23, 0x54, 0xa6, 0x7f, 0x82, 0xe7, 0x76, 0x4b, 0xf5, 0x55, 0x64, 0x01, 0xb1, 0x0e, 0xbc, 0xaa,
	0xc1, 0x8b, 0x83, 0x39, 0xfa, 0xde, 0xc6, 0xc0, 0x76, 0xd4, 0xec, 0x18, 0xb3, 0xfd, 0x2d, 0xd5,
	0xe1, 0x0e, 0x2e, 0x28, 0xb9, 0xfb, 0xf0, 0x7f, 0xbb, 0xed, 0xc4, 0x8d, 0x1c, 0xeb, 0xed, 0xca,
	0xa8, 0xc0, 0x95, 0x79, 0xe8, 0x39, 0x7a, 0x0d, 0x7d, 0x2b, 0x60, 0xe7, 0xac, 0x9c, 0xb2, 0x0f,
	0x35, 0x0e, 0x1f, 0xff, 0x0d, 0xf8, 0xee, 0xf8, 0xfd, 0x41, 0x3d, 0x62, 0x68, 0xf9, 0x8f, 0x10,
	0xd1, 0xd6, 0xbd, 0x91, 0xb4, 0x57, 0x79, 0x49, 0xe4, 0xbd, 0x78, 0xf0, 0x92, 0xe2, 0xc7, 0xc6,
	0xf8, 0x0a, 0xba, 0xd4, 0x20, 0xbd, 0x3b, 0x7b, 0x45, 0xec, 0x3d, 0x36, 0x57, 0x1e, 0x1b, 0x42,
	0x6b, 0x82, 0xef, 0x8b, 0xc1, 0xdd, 0xe5, 0x9e, 0x55, 0x87, 0xf0, 0xca, 0x9b, 0x9e, 0x5a, 0xf8,
	0xd5, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xd9, 0x45, 0xe7, 0x90, 0x07, 0x00, 0x00,
}
